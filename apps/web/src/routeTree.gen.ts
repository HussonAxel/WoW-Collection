/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodosImport } from './routes/todos'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as gameDataGameDataImport } from './routes/(gameData)/gameData'
import { Route as collectionCollectionImport } from './routes/(collection)/collection'
import { Route as characterCharacterImport } from './routes/(character)/character'
import { Route as gameDataGameDataRealmstatusImport } from './routes/(gameData)/gameData.realmstatus'
import { Route as gameDataGameDataItemsearchImport } from './routes/(gameData)/gameData.itemsearch'
import { Route as gameDataGameDataClassesImport } from './routes/(gameData)/gameData.classes'
import { Route as gameDataGameDataAuctionhouseImport } from './routes/(gameData)/gameData.auctionhouse'
import { Route as collectionCollectionToysImport } from './routes/(collection)/collection.toys'
import { Route as collectionCollectionMountsImport } from './routes/(collection)/collection.mounts'
import { Route as collectionCollectionHeirloomsImport } from './routes/(collection)/collection.heirlooms'
import { Route as collectionCollectionBattlepetsImport } from './routes/(collection)/collection.battlepets'
import { Route as collectionCollectionAppearancesImport } from './routes/(collection)/collection.appearances'
import { Route as characterCharacterTalentsImport } from './routes/(character)/character.talents'
import { Route as characterCharacterOverviewImport } from './routes/(character)/character.overview'
import { Route as characterCharacterGearImport } from './routes/(character)/character.gear'

// Create/Update Routes

const TodosRoute = TodosImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const gameDataGameDataRoute = gameDataGameDataImport.update({
  id: '/(gameData)/gameData',
  path: '/gameData',
  getParentRoute: () => rootRoute,
} as any)

const collectionCollectionRoute = collectionCollectionImport.update({
  id: '/(collection)/collection',
  path: '/collection',
  getParentRoute: () => rootRoute,
} as any)

const characterCharacterRoute = characterCharacterImport.update({
  id: '/(character)/character',
  path: '/character',
  getParentRoute: () => rootRoute,
} as any)

const gameDataGameDataRealmstatusRoute =
  gameDataGameDataRealmstatusImport.update({
    id: '/realmstatus',
    path: '/realmstatus',
    getParentRoute: () => gameDataGameDataRoute,
  } as any)

const gameDataGameDataItemsearchRoute = gameDataGameDataItemsearchImport.update(
  {
    id: '/itemsearch',
    path: '/itemsearch',
    getParentRoute: () => gameDataGameDataRoute,
  } as any,
)

const gameDataGameDataClassesRoute = gameDataGameDataClassesImport.update({
  id: '/classes',
  path: '/classes',
  getParentRoute: () => gameDataGameDataRoute,
} as any)

const gameDataGameDataAuctionhouseRoute =
  gameDataGameDataAuctionhouseImport.update({
    id: '/auctionhouse',
    path: '/auctionhouse',
    getParentRoute: () => gameDataGameDataRoute,
  } as any)

const collectionCollectionToysRoute = collectionCollectionToysImport.update({
  id: '/toys',
  path: '/toys',
  getParentRoute: () => collectionCollectionRoute,
} as any)

const collectionCollectionMountsRoute = collectionCollectionMountsImport.update(
  {
    id: '/mounts',
    path: '/mounts',
    getParentRoute: () => collectionCollectionRoute,
  } as any,
)

const collectionCollectionHeirloomsRoute =
  collectionCollectionHeirloomsImport.update({
    id: '/heirlooms',
    path: '/heirlooms',
    getParentRoute: () => collectionCollectionRoute,
  } as any)

const collectionCollectionBattlepetsRoute =
  collectionCollectionBattlepetsImport.update({
    id: '/battlepets',
    path: '/battlepets',
    getParentRoute: () => collectionCollectionRoute,
  } as any)

const collectionCollectionAppearancesRoute =
  collectionCollectionAppearancesImport.update({
    id: '/appearances',
    path: '/appearances',
    getParentRoute: () => collectionCollectionRoute,
  } as any)

const characterCharacterTalentsRoute = characterCharacterTalentsImport.update({
  id: '/talents',
  path: '/talents',
  getParentRoute: () => characterCharacterRoute,
} as any)

const characterCharacterOverviewRoute = characterCharacterOverviewImport.update(
  {
    id: '/overview',
    path: '/overview',
    getParentRoute: () => characterCharacterRoute,
  } as any,
)

const characterCharacterGearRoute = characterCharacterGearImport.update({
  id: '/gear',
  path: '/gear',
  getParentRoute: () => characterCharacterRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosImport
      parentRoute: typeof rootRoute
    }
    '/(character)/character': {
      id: '/(character)/character'
      path: '/character'
      fullPath: '/character'
      preLoaderRoute: typeof characterCharacterImport
      parentRoute: typeof rootRoute
    }
    '/(collection)/collection': {
      id: '/(collection)/collection'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof collectionCollectionImport
      parentRoute: typeof rootRoute
    }
    '/(gameData)/gameData': {
      id: '/(gameData)/gameData'
      path: '/gameData'
      fullPath: '/gameData'
      preLoaderRoute: typeof gameDataGameDataImport
      parentRoute: typeof rootRoute
    }
    '/(character)/character/gear': {
      id: '/(character)/character/gear'
      path: '/gear'
      fullPath: '/character/gear'
      preLoaderRoute: typeof characterCharacterGearImport
      parentRoute: typeof characterCharacterImport
    }
    '/(character)/character/overview': {
      id: '/(character)/character/overview'
      path: '/overview'
      fullPath: '/character/overview'
      preLoaderRoute: typeof characterCharacterOverviewImport
      parentRoute: typeof characterCharacterImport
    }
    '/(character)/character/talents': {
      id: '/(character)/character/talents'
      path: '/talents'
      fullPath: '/character/talents'
      preLoaderRoute: typeof characterCharacterTalentsImport
      parentRoute: typeof characterCharacterImport
    }
    '/(collection)/collection/appearances': {
      id: '/(collection)/collection/appearances'
      path: '/appearances'
      fullPath: '/collection/appearances'
      preLoaderRoute: typeof collectionCollectionAppearancesImport
      parentRoute: typeof collectionCollectionImport
    }
    '/(collection)/collection/battlepets': {
      id: '/(collection)/collection/battlepets'
      path: '/battlepets'
      fullPath: '/collection/battlepets'
      preLoaderRoute: typeof collectionCollectionBattlepetsImport
      parentRoute: typeof collectionCollectionImport
    }
    '/(collection)/collection/heirlooms': {
      id: '/(collection)/collection/heirlooms'
      path: '/heirlooms'
      fullPath: '/collection/heirlooms'
      preLoaderRoute: typeof collectionCollectionHeirloomsImport
      parentRoute: typeof collectionCollectionImport
    }
    '/(collection)/collection/mounts': {
      id: '/(collection)/collection/mounts'
      path: '/mounts'
      fullPath: '/collection/mounts'
      preLoaderRoute: typeof collectionCollectionMountsImport
      parentRoute: typeof collectionCollectionImport
    }
    '/(collection)/collection/toys': {
      id: '/(collection)/collection/toys'
      path: '/toys'
      fullPath: '/collection/toys'
      preLoaderRoute: typeof collectionCollectionToysImport
      parentRoute: typeof collectionCollectionImport
    }
    '/(gameData)/gameData/auctionhouse': {
      id: '/(gameData)/gameData/auctionhouse'
      path: '/auctionhouse'
      fullPath: '/gameData/auctionhouse'
      preLoaderRoute: typeof gameDataGameDataAuctionhouseImport
      parentRoute: typeof gameDataGameDataImport
    }
    '/(gameData)/gameData/classes': {
      id: '/(gameData)/gameData/classes'
      path: '/classes'
      fullPath: '/gameData/classes'
      preLoaderRoute: typeof gameDataGameDataClassesImport
      parentRoute: typeof gameDataGameDataImport
    }
    '/(gameData)/gameData/itemsearch': {
      id: '/(gameData)/gameData/itemsearch'
      path: '/itemsearch'
      fullPath: '/gameData/itemsearch'
      preLoaderRoute: typeof gameDataGameDataItemsearchImport
      parentRoute: typeof gameDataGameDataImport
    }
    '/(gameData)/gameData/realmstatus': {
      id: '/(gameData)/gameData/realmstatus'
      path: '/realmstatus'
      fullPath: '/gameData/realmstatus'
      preLoaderRoute: typeof gameDataGameDataRealmstatusImport
      parentRoute: typeof gameDataGameDataImport
    }
  }
}

// Create and export the route tree

interface characterCharacterRouteChildren {
  characterCharacterGearRoute: typeof characterCharacterGearRoute
  characterCharacterOverviewRoute: typeof characterCharacterOverviewRoute
  characterCharacterTalentsRoute: typeof characterCharacterTalentsRoute
}

const characterCharacterRouteChildren: characterCharacterRouteChildren = {
  characterCharacterGearRoute: characterCharacterGearRoute,
  characterCharacterOverviewRoute: characterCharacterOverviewRoute,
  characterCharacterTalentsRoute: characterCharacterTalentsRoute,
}

const characterCharacterRouteWithChildren =
  characterCharacterRoute._addFileChildren(characterCharacterRouteChildren)

interface collectionCollectionRouteChildren {
  collectionCollectionAppearancesRoute: typeof collectionCollectionAppearancesRoute
  collectionCollectionBattlepetsRoute: typeof collectionCollectionBattlepetsRoute
  collectionCollectionHeirloomsRoute: typeof collectionCollectionHeirloomsRoute
  collectionCollectionMountsRoute: typeof collectionCollectionMountsRoute
  collectionCollectionToysRoute: typeof collectionCollectionToysRoute
}

const collectionCollectionRouteChildren: collectionCollectionRouteChildren = {
  collectionCollectionAppearancesRoute: collectionCollectionAppearancesRoute,
  collectionCollectionBattlepetsRoute: collectionCollectionBattlepetsRoute,
  collectionCollectionHeirloomsRoute: collectionCollectionHeirloomsRoute,
  collectionCollectionMountsRoute: collectionCollectionMountsRoute,
  collectionCollectionToysRoute: collectionCollectionToysRoute,
}

const collectionCollectionRouteWithChildren =
  collectionCollectionRoute._addFileChildren(collectionCollectionRouteChildren)

interface gameDataGameDataRouteChildren {
  gameDataGameDataAuctionhouseRoute: typeof gameDataGameDataAuctionhouseRoute
  gameDataGameDataClassesRoute: typeof gameDataGameDataClassesRoute
  gameDataGameDataItemsearchRoute: typeof gameDataGameDataItemsearchRoute
  gameDataGameDataRealmstatusRoute: typeof gameDataGameDataRealmstatusRoute
}

const gameDataGameDataRouteChildren: gameDataGameDataRouteChildren = {
  gameDataGameDataAuctionhouseRoute: gameDataGameDataAuctionhouseRoute,
  gameDataGameDataClassesRoute: gameDataGameDataClassesRoute,
  gameDataGameDataItemsearchRoute: gameDataGameDataItemsearchRoute,
  gameDataGameDataRealmstatusRoute: gameDataGameDataRealmstatusRoute,
}

const gameDataGameDataRouteWithChildren =
  gameDataGameDataRoute._addFileChildren(gameDataGameDataRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
  '/character': typeof characterCharacterRouteWithChildren
  '/collection': typeof collectionCollectionRouteWithChildren
  '/gameData': typeof gameDataGameDataRouteWithChildren
  '/character/gear': typeof characterCharacterGearRoute
  '/character/overview': typeof characterCharacterOverviewRoute
  '/character/talents': typeof characterCharacterTalentsRoute
  '/collection/appearances': typeof collectionCollectionAppearancesRoute
  '/collection/battlepets': typeof collectionCollectionBattlepetsRoute
  '/collection/heirlooms': typeof collectionCollectionHeirloomsRoute
  '/collection/mounts': typeof collectionCollectionMountsRoute
  '/collection/toys': typeof collectionCollectionToysRoute
  '/gameData/auctionhouse': typeof gameDataGameDataAuctionhouseRoute
  '/gameData/classes': typeof gameDataGameDataClassesRoute
  '/gameData/itemsearch': typeof gameDataGameDataItemsearchRoute
  '/gameData/realmstatus': typeof gameDataGameDataRealmstatusRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
  '/character': typeof characterCharacterRouteWithChildren
  '/collection': typeof collectionCollectionRouteWithChildren
  '/gameData': typeof gameDataGameDataRouteWithChildren
  '/character/gear': typeof characterCharacterGearRoute
  '/character/overview': typeof characterCharacterOverviewRoute
  '/character/talents': typeof characterCharacterTalentsRoute
  '/collection/appearances': typeof collectionCollectionAppearancesRoute
  '/collection/battlepets': typeof collectionCollectionBattlepetsRoute
  '/collection/heirlooms': typeof collectionCollectionHeirloomsRoute
  '/collection/mounts': typeof collectionCollectionMountsRoute
  '/collection/toys': typeof collectionCollectionToysRoute
  '/gameData/auctionhouse': typeof gameDataGameDataAuctionhouseRoute
  '/gameData/classes': typeof gameDataGameDataClassesRoute
  '/gameData/itemsearch': typeof gameDataGameDataItemsearchRoute
  '/gameData/realmstatus': typeof gameDataGameDataRealmstatusRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
  '/(character)/character': typeof characterCharacterRouteWithChildren
  '/(collection)/collection': typeof collectionCollectionRouteWithChildren
  '/(gameData)/gameData': typeof gameDataGameDataRouteWithChildren
  '/(character)/character/gear': typeof characterCharacterGearRoute
  '/(character)/character/overview': typeof characterCharacterOverviewRoute
  '/(character)/character/talents': typeof characterCharacterTalentsRoute
  '/(collection)/collection/appearances': typeof collectionCollectionAppearancesRoute
  '/(collection)/collection/battlepets': typeof collectionCollectionBattlepetsRoute
  '/(collection)/collection/heirlooms': typeof collectionCollectionHeirloomsRoute
  '/(collection)/collection/mounts': typeof collectionCollectionMountsRoute
  '/(collection)/collection/toys': typeof collectionCollectionToysRoute
  '/(gameData)/gameData/auctionhouse': typeof gameDataGameDataAuctionhouseRoute
  '/(gameData)/gameData/classes': typeof gameDataGameDataClassesRoute
  '/(gameData)/gameData/itemsearch': typeof gameDataGameDataItemsearchRoute
  '/(gameData)/gameData/realmstatus': typeof gameDataGameDataRealmstatusRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/todos'
    | '/character'
    | '/collection'
    | '/gameData'
    | '/character/gear'
    | '/character/overview'
    | '/character/talents'
    | '/collection/appearances'
    | '/collection/battlepets'
    | '/collection/heirlooms'
    | '/collection/mounts'
    | '/collection/toys'
    | '/gameData/auctionhouse'
    | '/gameData/classes'
    | '/gameData/itemsearch'
    | '/gameData/realmstatus'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/todos'
    | '/character'
    | '/collection'
    | '/gameData'
    | '/character/gear'
    | '/character/overview'
    | '/character/talents'
    | '/collection/appearances'
    | '/collection/battlepets'
    | '/collection/heirlooms'
    | '/collection/mounts'
    | '/collection/toys'
    | '/gameData/auctionhouse'
    | '/gameData/classes'
    | '/gameData/itemsearch'
    | '/gameData/realmstatus'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/todos'
    | '/(character)/character'
    | '/(collection)/collection'
    | '/(gameData)/gameData'
    | '/(character)/character/gear'
    | '/(character)/character/overview'
    | '/(character)/character/talents'
    | '/(collection)/collection/appearances'
    | '/(collection)/collection/battlepets'
    | '/(collection)/collection/heirlooms'
    | '/(collection)/collection/mounts'
    | '/(collection)/collection/toys'
    | '/(gameData)/gameData/auctionhouse'
    | '/(gameData)/gameData/classes'
    | '/(gameData)/gameData/itemsearch'
    | '/(gameData)/gameData/realmstatus'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  TodosRoute: typeof TodosRoute
  characterCharacterRoute: typeof characterCharacterRouteWithChildren
  collectionCollectionRoute: typeof collectionCollectionRouteWithChildren
  gameDataGameDataRoute: typeof gameDataGameDataRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  TodosRoute: TodosRoute,
  characterCharacterRoute: characterCharacterRouteWithChildren,
  collectionCollectionRoute: collectionCollectionRouteWithChildren,
  gameDataGameDataRoute: gameDataGameDataRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/todos",
        "/(character)/character",
        "/(collection)/collection",
        "/(gameData)/gameData"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/todos": {
      "filePath": "todos.tsx"
    },
    "/(character)/character": {
      "filePath": "(character)/character.tsx",
      "children": [
        "/(character)/character/gear",
        "/(character)/character/overview",
        "/(character)/character/talents"
      ]
    },
    "/(collection)/collection": {
      "filePath": "(collection)/collection.tsx",
      "children": [
        "/(collection)/collection/appearances",
        "/(collection)/collection/battlepets",
        "/(collection)/collection/heirlooms",
        "/(collection)/collection/mounts",
        "/(collection)/collection/toys"
      ]
    },
    "/(gameData)/gameData": {
      "filePath": "(gameData)/gameData.tsx",
      "children": [
        "/(gameData)/gameData/auctionhouse",
        "/(gameData)/gameData/classes",
        "/(gameData)/gameData/itemsearch",
        "/(gameData)/gameData/realmstatus"
      ]
    },
    "/(character)/character/gear": {
      "filePath": "(character)/character.gear.tsx",
      "parent": "/(character)/character"
    },
    "/(character)/character/overview": {
      "filePath": "(character)/character.overview.tsx",
      "parent": "/(character)/character"
    },
    "/(character)/character/talents": {
      "filePath": "(character)/character.talents.tsx",
      "parent": "/(character)/character"
    },
    "/(collection)/collection/appearances": {
      "filePath": "(collection)/collection.appearances.tsx",
      "parent": "/(collection)/collection"
    },
    "/(collection)/collection/battlepets": {
      "filePath": "(collection)/collection.battlepets.tsx",
      "parent": "/(collection)/collection"
    },
    "/(collection)/collection/heirlooms": {
      "filePath": "(collection)/collection.heirlooms.tsx",
      "parent": "/(collection)/collection"
    },
    "/(collection)/collection/mounts": {
      "filePath": "(collection)/collection.mounts.tsx",
      "parent": "/(collection)/collection"
    },
    "/(collection)/collection/toys": {
      "filePath": "(collection)/collection.toys.tsx",
      "parent": "/(collection)/collection"
    },
    "/(gameData)/gameData/auctionhouse": {
      "filePath": "(gameData)/gameData.auctionhouse.tsx",
      "parent": "/(gameData)/gameData"
    },
    "/(gameData)/gameData/classes": {
      "filePath": "(gameData)/gameData.classes.tsx",
      "parent": "/(gameData)/gameData"
    },
    "/(gameData)/gameData/itemsearch": {
      "filePath": "(gameData)/gameData.itemsearch.tsx",
      "parent": "/(gameData)/gameData"
    },
    "/(gameData)/gameData/realmstatus": {
      "filePath": "(gameData)/gameData.realmstatus.tsx",
      "parent": "/(gameData)/gameData"
    }
  }
}
ROUTE_MANIFEST_END */
